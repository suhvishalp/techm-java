Java 


    language            library/sdk                 framework 

    Java                util, lang,                 Spring 
                        jdbc, etc.

    Python              ...                         django, flask

    C# / VB             ..                          .net framework 

    JavaScript          Bootstrap, react            Angular

    Go Lang
    ...
    ..

        |                       |                   |
    programming             simplify            standardize the process 
    capabilities            your tasks          of developing the app


    ORM (object relational mapping) Tool 
        - Hibernate / Hibernate JPA 
        - toplink / EclipseLink
        - iBatis / Mybatis


    Testing Tools / frameworks 

    Database engine 
        - sqlite
        - mysql 
        - sql server 
        - postgresql
        - ...


    IDE 
        Eclipse / STS / IntelIJ Idea



    Java 
    ------

            JVM - Java Virtual Machine 
                    - responsible to execute the "byte code" on the machine / platform

            JRE - Java Runtime Environment  
                - JVM + set of libraries required to run java programs 

            JDK - Java Development Kit 
                - JRE + development tools i.e. java, javac, jar, etc. 


            java code       ---> byte code 
                                (understandable to JVM)



            Environment setup 
            ------------------
                1. openjdk 11 
                2. Eclipse IDE for Enterprise Java and Web Developers
                3. MySQL community edition 


    JavaSE - Standard Edition 
        - core java, standard libraries i.e lang, utils, jdbc, io etc. 
    
    JavaEE - Enterprise Edition 
        - web applications, web services, REST APIs etc.

    JavaME - Micro Edition 
        - application for small / embedded devices 


    Java - object oriented programming 


    Naming conventions / Best practices 


    Class 

    Object 


    Variables 
    -------------
        <<datatype>> varname;


    Data Types in java 
    ------------------- 
        1. primitive data types 
            - stores the values directly 
            - there 8 primitive types 

                byte        1 byte      -128 to 127
                short       2 bytes 
                int         4 bytes 
                long        8 bytes
                float       4 bytes 
                double      8 bytes 
                char        1 byte 
                boolean     1 bit

        2. Reference data types 
            - store ref to the memory 
            - all the class types, interface types are called ref types 

                    String str;


            Memory In java 
            ---------------
                    = static memory 
                    = stack memory 
                    = heap memory 


        variables types 
        ----------------

        1. local variable 
            - a variable declared inside a function / block is called local variable 
            - memory for local vars will be allocated when the method is invoked, and destroyed when the method finishes its execution 
            - it must be initialized before first use 


        2. instance variable 
            - declared inside a class, but outside any method/constructor/block
            - memory is allocated when you create object of the class & destroyed when the object is deleted 

            - instance variables have default values 
                    numbers = 0
                    booleans = false 
                    ref types = null 

            - instance variables can have access modifires i.edition    
                         public, private, protected, default 


        3. static variable 
            - only 1 copy of static variable will be allocated 
            - memory is created at the beginning of the program, when the class is loaded 
            - accessibility and default values are similar to instance variables 
            

Static Keyword 
-----------------
    - static variable 

    - static method 

    - static class 


final keyword 
---------------
    - final variable 
            - final variables cannot be modified 

    - final method 
            - a final method cannot be overridden in a child class

    - final class 
            - if a class if final, you cannot create subclasses

System.in 
----------
    - The "standard" input stream. 
    - This stream is already open and ready to supply input data.
    -  Typically this stream corresponds to keyboard input or another input source specified by the host environment or user.


System.out
-----------


Decision making statemetns 

    if (boolean_expression) {
        //code statements 
        //code statements
    }

Array 
    - collection or group of same type of values 
    - in java Arrays are objects 
    - the size of the array is fixed, it cannot be changed
    - Arrays can store primitive values as well as references to objects 
    

    - Declare an array variable 
        <<datatype>>[] varName; 

        int[] nums; 
        String [] names;
        Employee []employees;
        Student students[];

    - create Array object 
        arrVarName = new <dataype>[size];
        nums = new int[5];


Garbadge collection 



POJO 

Java Bean 

BO 

SO 

DAO 

DTO 

VO 